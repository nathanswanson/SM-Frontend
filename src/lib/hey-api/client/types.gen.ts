// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * Body_login_user_token_post
 */
export type BodyLoginUserTokenPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * ContainerCommandResponse
 */
export type ContainerCommandResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * ContainerCreateRequest
 */
export type ContainerCreateRequest = {
    /**
     * Server Name
     */
    server_name: string;
    /**
     * Template
     */
    template: string;
    /**
     * Port
     */
    port: {
        [key: string]: number | null;
    } | null;
    /**
     * Env
     */
    env: {
        [key: string]: string;
    };
};

/**
 * ContainerCreateResponse
 */
export type ContainerCreateResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * ContainerDeleteResponse
 */
export type ContainerDeleteResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * ContainerFileDeleteResponse
 */
export type ContainerFileDeleteResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * ContainerFileListResponse
 */
export type ContainerFileListResponse = {
    /**
     * Items
     */
    items: Array<string>;
};

/**
 * ContainerFileUploadRequest
 */
export type ContainerFileUploadRequest = {
    /**
     * Path
     */
    path: string;
    /**
     * File
     */
    file: Blob | File;
};

/**
 * ContainerFileUploadResponse
 */
export type ContainerFileUploadResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * ContainerListResponse
 */
export type ContainerListResponse = {
    /**
     * Items
     */
    items: Array<string>;
};

/**
 * ContainerLogsResponse
 */
export type ContainerLogsResponse = {
    /**
     * Items
     */
    items: Array<string>;
};

/**
 * ContainerStartResponse
 */
export type ContainerStartResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * ContainerStatusResponse
 */
export type ContainerStatusResponse = {
    /**
     * Running
     */
    running: boolean;
};

/**
 * ContainerStopResponse
 */
export type ContainerStopResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * CreateUserRequest
 */
export type CreateUserRequest = {
    /**
     * Username
     */
    username: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * NodeDiskUsageResponse
 */
export type NodeDiskUsageResponse = {
    /**
     * Total
     */
    total: number;
    /**
     * Used
     */
    used: number;
};

/**
 * NodePingResponse
 */
export type NodePingResponse = {
    /**
     * Recieved At
     */
    recieved_at: number;
};

/**
 * NodeUptimeResponse
 */
export type NodeUptimeResponse = {
    /**
     * Uptime Hours
     */
    uptime_hours: number;
};

/**
 * Nodes
 */
export type Nodes = {
    /**
     * Cpus
     * Number of CPUs on the node
     */
    cpus: number;
    /**
     * Disk
     * Total disk space on the node in GB
     */
    disk: number;
    /**
     * Memory
     * Total memory on the node in GB
     */
    memory: number;
    /**
     * Cpu Name
     * CPU model name
     */
    cpu_name: string;
    /**
     * Max Hz
     * Maximum CPU frequency on the node in MHz
     */
    max_hz: number;
    /**
     * Id
     * Node name
     */
    id: string;
    /**
     * Arch
     * Node architecture
     */
    arch: string;
};

/**
 * TemplateCreateResponse
 */
export type TemplateCreateResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * TemplateDeleteRequest
 */
export type TemplateDeleteRequest = {
    /**
     * Item
     */
    item: string;
};

/**
 * TemplateDeleteResponse
 */
export type TemplateDeleteResponse = {
    /**
     * Success
     */
    success: boolean;
};

/**
 * TemplateListResponse
 */
export type TemplateListResponse = {
    /**
     * Items
     */
    items: Array<string>;
};

/**
 * Templates
 */
export type Templates = {
    /**
     * Name
     * Template name
     */
    name: string;
    /**
     * Image
     * Docker image name
     */
    image: string;
    /**
     * Tags
     * Comma-separated tags for the template
     */
    tags: string | null;
    /**
     * Default Env
     * JSON string of default environment variables
     */
    default_env: string | null;
    /**
     * Additional Env
     * JSON string of environment variables that will be added to server creator
     */
    additional_env: string | null;
    /**
     * Resource Min Cpu
     * Minimum CPU resources required
     */
    resource_min_cpu: number | null;
    /**
     * Resource Min Disk
     * Minimum Disk resources required
     */
    resource_min_disk: number | null;
    /**
     * Resource Min Mem
     * Minimum Memory resources required
     */
    resource_min_mem: number | null;
};

/**
 * Users
 */
export type Users = {
    /**
     * Username
     */
    username: string;
    /**
     * Disabled
     */
    disabled?: boolean | null;
    /**
     * Admin
     */
    admin?: boolean | null;
    /**
     * Hashed Password
     */
    hashed_password: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * CreateUserRequest
 */
export type CreateUserRequestWritable = {
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
};

export type ListContainersApiContainerListGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/container/list';
};

export type ListContainersApiContainerListGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListContainersApiContainerListGetError = ListContainersApiContainerListGetErrors[keyof ListContainersApiContainerListGetErrors];

export type ListContainersApiContainerListGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerListResponse;
};

export type ListContainersApiContainerListGetResponse = ListContainersApiContainerListGetResponses[keyof ListContainersApiContainerListGetResponses];

export type StartContainerApiContainerNameStartGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Name
         */
        name: string;
    };
    query?: never;
    url: '/api/container/{name}/start';
};

export type StartContainerApiContainerNameStartGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StartContainerApiContainerNameStartGetError = StartContainerApiContainerNameStartGetErrors[keyof StartContainerApiContainerNameStartGetErrors];

export type StartContainerApiContainerNameStartGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerStartResponse;
};

export type StartContainerApiContainerNameStartGetResponse = StartContainerApiContainerNameStartGetResponses[keyof StartContainerApiContainerNameStartGetResponses];

export type StopContainerApiContainerNameStopGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Name
         */
        name: string;
    };
    query?: never;
    url: '/api/container/{name}/stop';
};

export type StopContainerApiContainerNameStopGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StopContainerApiContainerNameStopGetError = StopContainerApiContainerNameStopGetErrors[keyof StopContainerApiContainerNameStopGetErrors];

export type StopContainerApiContainerNameStopGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerStopResponse;
};

export type StopContainerApiContainerNameStopGetResponse = StopContainerApiContainerNameStopGetResponses[keyof StopContainerApiContainerNameStopGetResponses];

export type CreateContainerApiContainerCreateTemplateNamePostData = {
    body: ContainerCreateRequest;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/container/create/{template_name}';
};

export type CreateContainerApiContainerCreateTemplateNamePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateContainerApiContainerCreateTemplateNamePostError = CreateContainerApiContainerCreateTemplateNamePostErrors[keyof CreateContainerApiContainerCreateTemplateNamePostErrors];

export type CreateContainerApiContainerCreateTemplateNamePostResponses = {
    /**
     * Successful Response
     */
    200: ContainerCreateResponse;
};

export type CreateContainerApiContainerCreateTemplateNamePostResponse = CreateContainerApiContainerCreateTemplateNamePostResponses[keyof CreateContainerApiContainerCreateTemplateNamePostResponses];

export type GetContainerStatusApiContainerContainerNameStatusGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query?: never;
    url: '/api/container/{container_name}/status';
};

export type GetContainerStatusApiContainerContainerNameStatusGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetContainerStatusApiContainerContainerNameStatusGetError = GetContainerStatusApiContainerContainerNameStatusGetErrors[keyof GetContainerStatusApiContainerContainerNameStatusGetErrors];

export type GetContainerStatusApiContainerContainerNameStatusGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerStatusResponse;
};

export type GetContainerStatusApiContainerContainerNameStatusGetResponse = GetContainerStatusApiContainerContainerNameStatusGetResponses[keyof GetContainerStatusApiContainerContainerNameStatusGetResponses];

export type GetLogMessageApiContainerContainerNameLogsGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query?: {
        /**
         * Line Count
         */
        line_count?: number | null;
    };
    url: '/api/container/{container_name}/logs';
};

export type GetLogMessageApiContainerContainerNameLogsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLogMessageApiContainerContainerNameLogsGetError = GetLogMessageApiContainerContainerNameLogsGetErrors[keyof GetLogMessageApiContainerContainerNameLogsGetErrors];

export type GetLogMessageApiContainerContainerNameLogsGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerLogsResponse;
};

export type GetLogMessageApiContainerContainerNameLogsGetResponse = GetLogMessageApiContainerContainerNameLogsGetResponses[keyof GetLogMessageApiContainerContainerNameLogsGetResponses];

export type GetDirectoryFilenamesApiContainerContainerNameFsListGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query: {
        /**
         * Path
         */
        path: string;
    };
    url: '/api/container/{container_name}/fs/list';
};

export type GetDirectoryFilenamesApiContainerContainerNameFsListGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDirectoryFilenamesApiContainerContainerNameFsListGetError = GetDirectoryFilenamesApiContainerContainerNameFsListGetErrors[keyof GetDirectoryFilenamesApiContainerContainerNameFsListGetErrors];

export type GetDirectoryFilenamesApiContainerContainerNameFsListGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerFileListResponse;
};

export type GetDirectoryFilenamesApiContainerContainerNameFsListGetResponse = GetDirectoryFilenamesApiContainerContainerNameFsListGetResponses[keyof GetDirectoryFilenamesApiContainerContainerNameFsListGetResponses];

export type ReadFileApiContainerContainerNameFsGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query: {
        /**
         * Path
         */
        path: string;
    };
    url: '/api/container/{container_name}/fs';
};

export type ReadFileApiContainerContainerNameFsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadFileApiContainerContainerNameFsGetError = ReadFileApiContainerContainerNameFsGetErrors[keyof ReadFileApiContainerContainerNameFsGetErrors];

export type ReadFileApiContainerContainerNameFsGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UploadFileApiContainerContainerNameFsUploadPostData = {
    body: ContainerFileUploadRequest;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query?: never;
    url: '/api/container/{container_name}/fs/upload/';
};

export type UploadFileApiContainerContainerNameFsUploadPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadFileApiContainerContainerNameFsUploadPostError = UploadFileApiContainerContainerNameFsUploadPostErrors[keyof UploadFileApiContainerContainerNameFsUploadPostErrors];

export type UploadFileApiContainerContainerNameFsUploadPostResponses = {
    /**
     * Successful Response
     */
    200: ContainerFileUploadResponse;
};

export type UploadFileApiContainerContainerNameFsUploadPostResponse = UploadFileApiContainerContainerNameFsUploadPostResponses[keyof UploadFileApiContainerContainerNameFsUploadPostResponses];

export type DeleteFileApiContainerContainerNameFsDeletePostData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query: {
        /**
         * Path
         */
        path: string;
    };
    url: '/api/container/{container_name}/fs/delete/';
};

export type DeleteFileApiContainerContainerNameFsDeletePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFileApiContainerContainerNameFsDeletePostError = DeleteFileApiContainerContainerNameFsDeletePostErrors[keyof DeleteFileApiContainerContainerNameFsDeletePostErrors];

export type DeleteFileApiContainerContainerNameFsDeletePostResponses = {
    /**
     * Successful Response
     */
    200: ContainerFileDeleteResponse;
};

export type DeleteFileApiContainerContainerNameFsDeletePostResponse = DeleteFileApiContainerContainerNameFsDeletePostResponses[keyof DeleteFileApiContainerContainerNameFsDeletePostResponses];

export type SendCommandApiContainerContainerNameCommandGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query: {
        /**
         * Command
         */
        command: string;
    };
    url: '/api/container/{container_name}/command';
};

export type SendCommandApiContainerContainerNameCommandGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SendCommandApiContainerContainerNameCommandGetError = SendCommandApiContainerContainerNameCommandGetErrors[keyof SendCommandApiContainerContainerNameCommandGetErrors];

export type SendCommandApiContainerContainerNameCommandGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerCommandResponse;
};

export type SendCommandApiContainerContainerNameCommandGetResponse = SendCommandApiContainerContainerNameCommandGetResponses[keyof SendCommandApiContainerContainerNameCommandGetResponses];

export type DeleteContainerApiContainerContainerNameDeleteGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Container Name
         */
        container_name: string;
    };
    query?: never;
    url: '/api/container/{container_name}/delete';
};

export type DeleteContainerApiContainerContainerNameDeleteGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteContainerApiContainerContainerNameDeleteGetError = DeleteContainerApiContainerContainerNameDeleteGetErrors[keyof DeleteContainerApiContainerContainerNameDeleteGetErrors];

export type DeleteContainerApiContainerContainerNameDeleteGetResponses = {
    /**
     * Successful Response
     */
    200: ContainerDeleteResponse;
};

export type DeleteContainerApiContainerContainerNameDeleteGetResponse = DeleteContainerApiContainerContainerNameDeleteGetResponses[keyof DeleteContainerApiContainerContainerNameDeleteGetResponses];

export type ListTemplatesApiTemplateListGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/template/list';
};

export type ListTemplatesApiTemplateListGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListTemplatesApiTemplateListGetError = ListTemplatesApiTemplateListGetErrors[keyof ListTemplatesApiTemplateListGetErrors];

export type ListTemplatesApiTemplateListGetResponses = {
    /**
     * Successful Response
     */
    200: TemplateListResponse;
};

export type ListTemplatesApiTemplateListGetResponse = ListTemplatesApiTemplateListGetResponses[keyof ListTemplatesApiTemplateListGetResponses];

export type GetTemplateNameApiTemplateNameGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path: {
        /**
         * Name
         */
        name: string;
    };
    query?: never;
    url: '/api/template/{name}';
};

export type GetTemplateNameApiTemplateNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTemplateNameApiTemplateNameGetError = GetTemplateNameApiTemplateNameGetErrors[keyof GetTemplateNameApiTemplateNameGetErrors];

export type GetTemplateNameApiTemplateNameGetResponses = {
    /**
     * Successful Response
     */
    200: Templates;
};

export type GetTemplateNameApiTemplateNameGetResponse = GetTemplateNameApiTemplateNameGetResponses[keyof GetTemplateNameApiTemplateNameGetResponses];

export type AddTemplateApiTemplateCreatePostData = {
    body: Templates;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/template/create';
};

export type AddTemplateApiTemplateCreatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddTemplateApiTemplateCreatePostError = AddTemplateApiTemplateCreatePostErrors[keyof AddTemplateApiTemplateCreatePostErrors];

export type AddTemplateApiTemplateCreatePostResponses = {
    /**
     * Successful Response
     */
    200: TemplateCreateResponse;
};

export type AddTemplateApiTemplateCreatePostResponse = AddTemplateApiTemplateCreatePostResponses[keyof AddTemplateApiTemplateCreatePostResponses];

export type DeleteTemplateApiTemplateNameDeletePostData = {
    body: TemplateDeleteRequest;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/template/{name}/delete';
};

export type DeleteTemplateApiTemplateNameDeletePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTemplateApiTemplateNameDeletePostError = DeleteTemplateApiTemplateNameDeletePostErrors[keyof DeleteTemplateApiTemplateNameDeletePostErrors];

export type DeleteTemplateApiTemplateNameDeletePostResponses = {
    /**
     * Successful Response
     */
    200: TemplateDeleteResponse;
};

export type DeleteTemplateApiTemplateNameDeletePostResponse = DeleteTemplateApiTemplateNameDeletePostResponses[keyof DeleteTemplateApiTemplateNameDeletePostResponses];

export type HardwareApiNodesHardwareGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/nodes/hardware';
};

export type HardwareApiNodesHardwareGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type HardwareApiNodesHardwareGetError = HardwareApiNodesHardwareGetErrors[keyof HardwareApiNodesHardwareGetErrors];

export type HardwareApiNodesHardwareGetResponses = {
    /**
     * Successful Response
     */
    200: Nodes;
};

export type HardwareApiNodesHardwareGetResponse = HardwareApiNodesHardwareGetResponses[keyof HardwareApiNodesHardwareGetResponses];

export type DiskUsageApiNodesDiskUsageGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/nodes/disk_usage';
};

export type DiskUsageApiNodesDiskUsageGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DiskUsageApiNodesDiskUsageGetError = DiskUsageApiNodesDiskUsageGetErrors[keyof DiskUsageApiNodesDiskUsageGetErrors];

export type DiskUsageApiNodesDiskUsageGetResponses = {
    /**
     * Successful Response
     */
    200: NodeDiskUsageResponse;
};

export type DiskUsageApiNodesDiskUsageGetResponse = DiskUsageApiNodesDiskUsageGetResponses[keyof DiskUsageApiNodesDiskUsageGetResponses];

export type RuntimeApiNodesRuntimeGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/nodes/runtime';
};

export type RuntimeApiNodesRuntimeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RuntimeApiNodesRuntimeGetError = RuntimeApiNodesRuntimeGetErrors[keyof RuntimeApiNodesRuntimeGetErrors];

export type RuntimeApiNodesRuntimeGetResponses = {
    /**
     * Successful Response
     */
    200: NodeUptimeResponse;
};

export type RuntimeApiNodesRuntimeGetResponse = RuntimeApiNodesRuntimeGetResponses[keyof RuntimeApiNodesRuntimeGetResponses];

export type PingApiNodesPingGetData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/nodes/ping';
};

export type PingApiNodesPingGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PingApiNodesPingGetError = PingApiNodesPingGetErrors[keyof PingApiNodesPingGetErrors];

export type PingApiNodesPingGetResponses = {
    /**
     * Successful Response
     */
    200: NodePingResponse;
};

export type PingApiNodesPingGetResponse = PingApiNodesPingGetResponses[keyof PingApiNodesPingGetResponses];

export type LoginUserTokenPostData = {
    body: BodyLoginUserTokenPost;
    path?: never;
    query?: never;
    url: '/token';
};

export type LoginUserTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginUserTokenPostError = LoginUserTokenPostErrors[keyof LoginUserTokenPostErrors];

export type LoginUserTokenPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateUserAccountCreatePostData = {
    body: CreateUserRequestWritable;
    path?: never;
    query?: never;
    url: '/create';
};

export type CreateUserAccountCreatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserAccountCreatePostError = CreateUserAccountCreatePostErrors[keyof CreateUserAccountCreatePostErrors];

export type CreateUserAccountCreatePostResponses = {
    /**
     * Successful Response
     */
    200: Users;
};

export type CreateUserAccountCreatePostResponse = CreateUserAccountCreatePostResponses[keyof CreateUserAccountCreatePostResponses];

export type GetUserMePostData = {
    body?: never;
    headers?: {
        /**
         * Authorization
         */
        authorization?: string | null;
    };
    path?: never;
    query?: never;
    url: '/me';
};

export type GetUserMePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserMePostError = GetUserMePostErrors[keyof GetUserMePostErrors];

export type GetUserMePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
