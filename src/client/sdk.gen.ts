// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { ListContainersApiContainerListGetData, ListContainersApiContainerListGetResponses, StartContainerApiContainerNameStartGetData, StartContainerApiContainerNameStartGetResponses, StartContainerApiContainerNameStartGetErrors, StopContainerApiContainerNameStopGetData, StopContainerApiContainerNameStopGetResponses, StopContainerApiContainerNameStopGetErrors, CreateContainerApiContainerCreateTemplateNamePostData, CreateContainerApiContainerCreateTemplateNamePostResponses, CreateContainerApiContainerCreateTemplateNamePostErrors, GetContainerStatusApiContainerContainerNameStatusGetData, GetContainerStatusApiContainerContainerNameStatusGetResponses, GetContainerStatusApiContainerContainerNameStatusGetErrors, GetContainerMetricsApiContainerContainerNameMetricsGetData, GetContainerMetricsApiContainerContainerNameMetricsGetResponses, GetContainerMetricsApiContainerContainerNameMetricsGetErrors, GetLogMessageApiContainerContainerNameLogsGetData, GetLogMessageApiContainerContainerNameLogsGetResponses, GetLogMessageApiContainerContainerNameLogsGetErrors, ListTemplatesApiTemplateListGetData, ListTemplatesApiTemplateListGetResponses, GetTemplateNameApiTemplateNameGetData, GetTemplateNameApiTemplateNameGetResponses, GetTemplateNameApiTemplateNameGetErrors, AddTemplateApiTemplateAddTemplatePostData, AddTemplateApiTemplateAddTemplatePostResponses, AddTemplateApiTemplateAddTemplatePostErrors, DeleteTemplateApiTemplateNameDeletePostData, DeleteTemplateApiTemplateNameDeletePostResponses, DeleteTemplateApiTemplateNameDeletePostErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List Containers
 */
export const listContainersApiContainerListGet = <ThrowOnError extends boolean = false>(options?: Options<ListContainersApiContainerListGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListContainersApiContainerListGetResponses, unknown, ThrowOnError>({
        url: '/api/container/list',
        ...options
    });
};

/**
 * Start Container
 */
export const startContainerApiContainerNameStartGet = <ThrowOnError extends boolean = false>(options: Options<StartContainerApiContainerNameStartGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<StartContainerApiContainerNameStartGetResponses, StartContainerApiContainerNameStartGetErrors, ThrowOnError>({
        url: '/api/container/{name}/start',
        ...options
    });
};

/**
 * Stop Container
 */
export const stopContainerApiContainerNameStopGet = <ThrowOnError extends boolean = false>(options: Options<StopContainerApiContainerNameStopGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<StopContainerApiContainerNameStopGetResponses, StopContainerApiContainerNameStopGetErrors, ThrowOnError>({
        url: '/api/container/{name}/stop',
        ...options
    });
};

/**
 * Create Container
 */
export const createContainerApiContainerCreateTemplateNamePost = <ThrowOnError extends boolean = false>(options: Options<CreateContainerApiContainerCreateTemplateNamePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateContainerApiContainerCreateTemplateNamePostResponses, CreateContainerApiContainerCreateTemplateNamePostErrors, ThrowOnError>({
        url: '/api/container/create/{template_name}',
        ...options
    });
};

/**
 * Get Container Status
 */
export const getContainerStatusApiContainerContainerNameStatusGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerStatusApiContainerContainerNameStatusGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerStatusApiContainerContainerNameStatusGetResponses, GetContainerStatusApiContainerContainerNameStatusGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/status',
        ...options
    });
};

/**
 * Get Container Metrics
 */
export const getContainerMetricsApiContainerContainerNameMetricsGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerMetricsApiContainerContainerNameMetricsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerMetricsApiContainerContainerNameMetricsGetResponses, GetContainerMetricsApiContainerContainerNameMetricsGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/metrics',
        ...options
    });
};

/**
 * Get Log Message
 */
export const getLogMessageApiContainerContainerNameLogsGet = <ThrowOnError extends boolean = false>(options: Options<GetLogMessageApiContainerContainerNameLogsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetLogMessageApiContainerContainerNameLogsGetResponses, GetLogMessageApiContainerContainerNameLogsGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/logs',
        ...options
    });
};

/**
 * List Templates
 */
export const listTemplatesApiTemplateListGet = <ThrowOnError extends boolean = false>(options?: Options<ListTemplatesApiTemplateListGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListTemplatesApiTemplateListGetResponses, unknown, ThrowOnError>({
        url: '/api/template/list',
        ...options
    });
};

/**
 * Get Template Name
 */
export const getTemplateNameApiTemplateNameGet = <ThrowOnError extends boolean = false>(options: Options<GetTemplateNameApiTemplateNameGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetTemplateNameApiTemplateNameGetResponses, GetTemplateNameApiTemplateNameGetErrors, ThrowOnError>({
        url: '/api/template/{name}',
        ...options
    });
};

/**
 * Add Template
 */
export const addTemplateApiTemplateAddTemplatePost = <ThrowOnError extends boolean = false>(options: Options<AddTemplateApiTemplateAddTemplatePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddTemplateApiTemplateAddTemplatePostResponses, AddTemplateApiTemplateAddTemplatePostErrors, ThrowOnError>({
        url: '/api/template/add_template',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Template
 */
export const deleteTemplateApiTemplateNameDeletePost = <ThrowOnError extends boolean = false>(options: Options<DeleteTemplateApiTemplateNameDeletePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<DeleteTemplateApiTemplateNameDeletePostResponses, DeleteTemplateApiTemplateNameDeletePostErrors, ThrowOnError>({
        url: '/api/template/{name}/delete',
        ...options
    });
};