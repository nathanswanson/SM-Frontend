// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { ListContainersApiContainerListGetData, ListContainersApiContainerListGetResponses, GetContainerApiContainerNameGetData, GetContainerApiContainerNameGetResponses, GetContainerApiContainerNameGetErrors, StartContainerApiContainerNameStartGetData, StartContainerApiContainerNameStartGetResponses, StartContainerApiContainerNameStartGetErrors, StopContainerApiContainerNameStopGetData, StopContainerApiContainerNameStopGetResponses, StopContainerApiContainerNameStopGetErrors, CreateContainerApiContainerCreateTemplateNamePostData, CreateContainerApiContainerCreateTemplateNamePostResponses, CreateContainerApiContainerCreateTemplateNamePostErrors, GetContainerStatusApiContainerContainerNameStatusGetData, GetContainerStatusApiContainerContainerNameStatusGetResponses, GetContainerStatusApiContainerContainerNameStatusGetErrors, GetContainerMetricsApiContainerContainerNameMetricsGetData, GetContainerMetricsApiContainerContainerNameMetricsGetResponses, GetContainerMetricsApiContainerContainerNameMetricsGetErrors, GetLogMessageApiContainerContainerNameLogsGetData, GetLogMessageApiContainerContainerNameLogsGetResponses, GetLogMessageApiContainerContainerNameLogsGetErrors, GetDirectoryFilenamesApiContainerContainerNameFsListGetData, GetDirectoryFilenamesApiContainerContainerNameFsListGetResponses, GetDirectoryFilenamesApiContainerContainerNameFsListGetErrors, ReadFileApiContainerContainerNameFsGetData, ReadFileApiContainerContainerNameFsGetResponses, ReadFileApiContainerContainerNameFsGetErrors, UploadFileApiContainerContainerNameFsUploadPostData, UploadFileApiContainerContainerNameFsUploadPostResponses, UploadFileApiContainerContainerNameFsUploadPostErrors, DeleteFileApiContainerContainerNameFsDeletePostData, DeleteFileApiContainerContainerNameFsDeletePostResponses, DeleteFileApiContainerContainerNameFsDeletePostErrors, SendCommandApiContainerContainerNameCommandGetData, SendCommandApiContainerContainerNameCommandGetResponses, SendCommandApiContainerContainerNameCommandGetErrors, DeleteContainerApiContainerContainerNameDeleteGetData, DeleteContainerApiContainerContainerNameDeleteGetResponses, DeleteContainerApiContainerContainerNameDeleteGetErrors, ListTemplatesApiTemplateListGetData, ListTemplatesApiTemplateListGetResponses, GetTemplateNameApiTemplateNameGetData, GetTemplateNameApiTemplateNameGetResponses, GetTemplateNameApiTemplateNameGetErrors, AddTemplateApiTemplateCreatePostData, AddTemplateApiTemplateCreatePostResponses, AddTemplateApiTemplateCreatePostErrors, DeleteTemplateApiTemplateNameDeletePostData, DeleteTemplateApiTemplateNameDeletePostResponses, DeleteTemplateApiTemplateNameDeletePostErrors, HardwareApiSystemHardwareGetData, HardwareApiSystemHardwareGetResponses, PingApiSystemPingGetData, PingApiSystemPingGetResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List Containers
 */
export const listContainersApiContainerListGet = <ThrowOnError extends boolean = false>(options?: Options<ListContainersApiContainerListGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListContainersApiContainerListGetResponses, unknown, ThrowOnError>({
        url: '/api/container/list',
        ...options
    });
};

/**
 * Get Container
 */
export const getContainerApiContainerNameGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerApiContainerNameGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerApiContainerNameGetResponses, GetContainerApiContainerNameGetErrors, ThrowOnError>({
        url: '/api/container/{name}',
        ...options
    });
};

/**
 * Start Container
 */
export const startContainerApiContainerNameStartGet = <ThrowOnError extends boolean = false>(options: Options<StartContainerApiContainerNameStartGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<StartContainerApiContainerNameStartGetResponses, StartContainerApiContainerNameStartGetErrors, ThrowOnError>({
        url: '/api/container/{name}/start',
        ...options
    });
};

/**
 * Stop Container
 */
export const stopContainerApiContainerNameStopGet = <ThrowOnError extends boolean = false>(options: Options<StopContainerApiContainerNameStopGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<StopContainerApiContainerNameStopGetResponses, StopContainerApiContainerNameStopGetErrors, ThrowOnError>({
        url: '/api/container/{name}/stop',
        ...options
    });
};

/**
 * Create Container
 */
export const createContainerApiContainerCreateTemplateNamePost = <ThrowOnError extends boolean = false>(options: Options<CreateContainerApiContainerCreateTemplateNamePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateContainerApiContainerCreateTemplateNamePostResponses, CreateContainerApiContainerCreateTemplateNamePostErrors, ThrowOnError>({
        url: '/api/container/create/{template_name}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Container Status
 */
export const getContainerStatusApiContainerContainerNameStatusGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerStatusApiContainerContainerNameStatusGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerStatusApiContainerContainerNameStatusGetResponses, GetContainerStatusApiContainerContainerNameStatusGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/status',
        ...options
    });
};

/**
 * Get Container Metrics
 */
export const getContainerMetricsApiContainerContainerNameMetricsGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerMetricsApiContainerContainerNameMetricsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerMetricsApiContainerContainerNameMetricsGetResponses, GetContainerMetricsApiContainerContainerNameMetricsGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/metrics',
        ...options
    });
};

/**
 * Get Log Message
 */
export const getLogMessageApiContainerContainerNameLogsGet = <ThrowOnError extends boolean = false>(options: Options<GetLogMessageApiContainerContainerNameLogsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetLogMessageApiContainerContainerNameLogsGetResponses, GetLogMessageApiContainerContainerNameLogsGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/logs',
        ...options
    });
};

/**
 * Get Directory Filenames
 */
export const getDirectoryFilenamesApiContainerContainerNameFsListGet = <ThrowOnError extends boolean = false>(options: Options<GetDirectoryFilenamesApiContainerContainerNameFsListGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDirectoryFilenamesApiContainerContainerNameFsListGetResponses, GetDirectoryFilenamesApiContainerContainerNameFsListGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/fs/list',
        ...options
    });
};

/**
 * Read File
 */
export const readFileApiContainerContainerNameFsGet = <ThrowOnError extends boolean = false>(options: Options<ReadFileApiContainerContainerNameFsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ReadFileApiContainerContainerNameFsGetResponses, ReadFileApiContainerContainerNameFsGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/fs',
        ...options
    });
};

/**
 * Upload File
 */
export const uploadFileApiContainerContainerNameFsUploadPost = <ThrowOnError extends boolean = false>(options: Options<UploadFileApiContainerContainerNameFsUploadPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UploadFileApiContainerContainerNameFsUploadPostResponses, UploadFileApiContainerContainerNameFsUploadPostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/container/{container_name}/fs/upload/',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Delete File
 */
export const deleteFileApiContainerContainerNameFsDeletePost = <ThrowOnError extends boolean = false>(options: Options<DeleteFileApiContainerContainerNameFsDeletePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<DeleteFileApiContainerContainerNameFsDeletePostResponses, DeleteFileApiContainerContainerNameFsDeletePostErrors, ThrowOnError>({
        url: '/api/container/{container_name}/fs/delete/',
        ...options
    });
};

/**
 * Send Command
 */
export const sendCommandApiContainerContainerNameCommandGet = <ThrowOnError extends boolean = false>(options: Options<SendCommandApiContainerContainerNameCommandGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<SendCommandApiContainerContainerNameCommandGetResponses, SendCommandApiContainerContainerNameCommandGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/command',
        ...options
    });
};

/**
 * Delete Container
 */
export const deleteContainerApiContainerContainerNameDeleteGet = <ThrowOnError extends boolean = false>(options: Options<DeleteContainerApiContainerContainerNameDeleteGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<DeleteContainerApiContainerContainerNameDeleteGetResponses, DeleteContainerApiContainerContainerNameDeleteGetErrors, ThrowOnError>({
        url: '/api/container/{container_name}/delete',
        ...options
    });
};

/**
 * List Templates
 */
export const listTemplatesApiTemplateListGet = <ThrowOnError extends boolean = false>(options?: Options<ListTemplatesApiTemplateListGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListTemplatesApiTemplateListGetResponses, unknown, ThrowOnError>({
        url: '/api/template/list',
        ...options
    });
};

/**
 * Get Template Name
 */
export const getTemplateNameApiTemplateNameGet = <ThrowOnError extends boolean = false>(options: Options<GetTemplateNameApiTemplateNameGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetTemplateNameApiTemplateNameGetResponses, GetTemplateNameApiTemplateNameGetErrors, ThrowOnError>({
        url: '/api/template/{name}',
        ...options
    });
};

/**
 * Add Template
 */
export const addTemplateApiTemplateCreatePost = <ThrowOnError extends boolean = false>(options: Options<AddTemplateApiTemplateCreatePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddTemplateApiTemplateCreatePostResponses, AddTemplateApiTemplateCreatePostErrors, ThrowOnError>({
        url: '/api/template/create',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Template
 */
export const deleteTemplateApiTemplateNameDeletePost = <ThrowOnError extends boolean = false>(options: Options<DeleteTemplateApiTemplateNameDeletePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<DeleteTemplateApiTemplateNameDeletePostResponses, DeleteTemplateApiTemplateNameDeletePostErrors, ThrowOnError>({
        url: '/api/template/{name}/delete',
        ...options
    });
};

/**
 * Hardware
 */
export const hardwareApiSystemHardwareGet = <ThrowOnError extends boolean = false>(options?: Options<HardwareApiSystemHardwareGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<HardwareApiSystemHardwareGetResponses, unknown, ThrowOnError>({
        url: '/api/system/hardware',
        ...options
    });
};

/**
 * Ping
 */
export const pingApiSystemPingGet = <ThrowOnError extends boolean = false>(options?: Options<PingApiSystemPingGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<PingApiSystemPingGetResponses, unknown, ThrowOnError>({
        url: '/api/system/ping',
        ...options
    });
};